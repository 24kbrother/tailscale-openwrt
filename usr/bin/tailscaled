#!/bin/sh
set -e
if [ ! -f /tmp/tailscaled ]; then
    arch=$(uname -m)
    endianness=""  # 初始化 endianness 变量

    if [ "$arch" = "i386" ]; then
        arch=386
    elif [ "$arch" = "x86_64" ]; then
        arch=amd64
    elif [ "$arch" = "armv7l" ]; then
        arch=arm
    elif [ "$arch" = "aarch64" ]; then
        arch=arm64
    elif [ "$arch" = "armv8l" ]; then
        arch=arm64
    elif [ "$arch" = "geode" ]; then
        arch=geode
    elif [ "$arch" = "mips" ]; then
        endianness=$(echo -n I | hexdump -o | awk '{ print (substr($2,6,1)=="1") ? "le" : "" }')
    elif [ "$arch" = "riscv64" ]; then
        arch=riscv64
    else
        echo "当前机器的架构是${arch}${endianness}, 脚本不兼容此输出, 请给作者提issue以便作者及时修改脚本: https://github.com/CH3NGYZ/tailscale-openwrt/issues"
        exit 1
    fi

    tailscale_version="1.54.0"
    latest_version="not_available"
    version_timeout=5
    version_url="https://github.com/CH3NGYZ/tailscale-openwrt/releases/latest"
    version_proxys="https://git.xfj0.cn
    https://dl.ghpig.top
    https://gh.ddlc.top
    https://gh.h233.eu.org
    https://slink.ltd"

    for version_proxy in $version_proxys; do
        version_proxy_url="$version_proxy/$version_url"
        latest_version=$(timeout $version_timeout wget -c -qO- "$version_proxy_url" | grep 已从上游同步 | head -1 | cut -d'%' -f 2)
        echo "获取版本号, 网址: $version_proxy_url  结果: $latest_version"
        if [ "$latest_version" != "" ]; then
            echo "获取成功，版本号：$latest_version"
            break  # 如果成功获取到版本号，跳出循环
        fi
    done

    # 如果最终还是无法获取到最新版本号，使用默认版本号
    if [ "$latest_version" = "not_available" ]; then
        latest_version="1.54.0"
        echo "获取失败，使用内置版本号：$latest_version"
    fi

    if [ "$tailscale_version" != "$latest_version" ]; then
        tailscale_version=$latest_version
    fi

    version="${tailscale_version}_${arch}${endianness}"
    echo "正在下载Tailscale_${version} ..."

    zip_url="https://github.com/CH3NGYZ/tailscale-openwrt/releases/download/${tailscale_version}/tailscale_${version}.tgz"
    zip_proxys="https://git.xfj0.cn
    https://dl.ghpig.top
    https://gh.ddlc.top
    https://gh.h233.eu.org
    https://slink.ltd"

    download_success=false
    timeout_seconds=20
    for zip_proxy in $zip_proxys; do
        zip_proxy_url="$zip_proxy/$zip_url"
        echo "尝试下载 $zip_proxy_url..."

        # 使用 timeout 命令设定超时时间
        if timeout $timeout_seconds wget -c -qO- $zip_proxy_url | tar xzvf - -C /tmp; then
            download_success=true
            echo "下载成功!"
            break
        else
            echo "下载失败，尝试下一个代理..."
        fi
    done

    if [ "$download_success" != true ]; then
        echo "所有代理下载均失败，请检查网络或稍后再试。"
        exit 1
    fi

    mv /tmp/tailscale_$version/* /tmp
    rm -rf /tmp/tailscale_${version}*

fi

/tmp/tailscaled "$@"
